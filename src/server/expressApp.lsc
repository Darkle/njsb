import path from 'path'

import express from 'express'
import httpLogger from 'morgan'

import { indexRouter } from './routes/indexRouter.lsc'
import { emailExampleRouter } from './routes/emailExample.lsc'
import { adminRouter } from './routes/admin.lsc'
import { noop } from './utils.lsc'
import { logger } from './logging/logger.lsc'

PORT = process.env.PORT || 8086

expressInit(expressApp) ->
  expressApp.set('views', path.join(__dirname, 'views'))
  expressApp.set('view engine', 'pug')
  expressApp.use(logger.errorHandler())
  expressApp.use(ISDEV ? httpLogger('dev') : noop)
  expressApp.use(express.json())
  expressApp.use(express.urlencoded({ extended: false }))
  // expressApp.use(cookieParser())
  expressApp.use(express.static(path.join(__dirname, 'public')))

  expressApp.use('/', indexRouter)
  expressApp.use('/example', emailExampleRouter)
  expressApp.use('/admin', adminRouter)

  // catch 404
  expressApp.use((req, res) ->
    res.status(404)
    res.render('404')
  )

  // error handler
  expressApp.use((err, req, res, next) ->    // eslint-disable-line no-unused-vars
    // set locals, only providing error in development
    res.locals.message = err.message    // eslint-disable-line fp/no-mutation
    res.locals.error = ISDEV ? err : {}   // eslint-disable-line fp/no-mutation
    // render the error page
    res.status(err.status || 500)
    res.render('error')
  )

  expressApp.listen(PORT, () ->
    console.log(`App listening on port ${PORT}`)
    console.log('Press Ctrl+C to quit.')
  )

export {
  expressInit
}
